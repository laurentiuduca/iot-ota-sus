#!/bin/bash

# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2021 Laurentiu-Cristian Duca
# This is an enhanced version of Thomas Petazzoni
# "Building a Linux system for the STM32MP1: remote firmware updates"
# https://bootlin.com/blog/tag/swupdate

set -x

DAEMON="swupdate"
PIDFILE="/var/run/$DAEMON.pid"

start() {
        printf 'Starting %s: ' "$DAEMON"

	mount /dev/mmcblk0p1 /mnt

	bootcount=`/root/bootcount.out`
	# strip everything until and including "bootcount="
	bootcount="${bootcount#*bootcount=}"
	bootlimit=`fw_printenv bootlimit`
	# strip everything until and including "bootlimit="
	bootlimit="${bootlimit#*bootlimit=}"

	if test $bootcount -le $bootlimit; then
		cmdline=`fw_printenv bootcmd`
	else
		cmdline=`fw_printenv altbootcmd`
	fi
	# strip everything until and including "mmcblk0p"
	cmdline="${cmdline#*mmcblk0p}"
	# here 1st index starts with 0
	mmcstr="${cmdline:0:1}"
	# echo "mmcstr=$mmcstr"
	if test "$mmcstr" == "2" ; then
        	ROOTFS="rootfs-2"
		#echo "mmcblk0p3" > /root/mmc-part-id
		echo "3" > /root/mmc-part-id
	else
        	ROOTFS="rootfs-1"
		#echo "mmcblk0p2" > /root/mmc-part-id
		echo "2" > /root/mmc-part-id
	fi
	umount /mnt

	. /etc/swupdate/set-vars.sh
	echo "SURICATTA board id is ${TARGET_ID}"

	if test -f /update-ok ; then
        	SURICATTA_ARGS="-c 2"
	        rm -f /update-ok
	fi

	# atspool is atd output
	mkdir -p /var/spool/cron/atspool
	# https
	# CONNECT_CMD="curl -v --cacert /etc/swupdate/priv-cachain.pem --capath /etc/swupdate --user 'admin:admin' '${HAWKBIT_URL}/rest/v1/targets' -i -X POST -H 'Content-Type: application/json;charset=UTF-8' -d '[ {\"securityToken\" : \"${TARGET_TOKEN}\", \"controllerId\" : \"${TARGET_ID}\",\"name\" : \"${TARGET_ID}\", \"description\" : \"Controller ${TARGET_ID}\"} ]'"
	# http
	# echo "curl --user 'admin:admin' '${HAWKBIT_URL}/rest/v1/targets' -i -X POST -H 'Content-Type: application/json;charset=UTF-8' -d '[ {\"securityToken\" : \"${TARGET_TOKEN}\", \"controllerId\" : \"${TARGET_ID}\",\"name\" : \"${TARGET_ID}\", \"description\" : \"Test controller 1\"} ]' -v" | at now + 1 minutes

        printf 'start-stop-daemon %s: ' "$DAEMON"
        # shellcheck disable=SC2086 # we need the word splitting
        start-stop-daemon -b -q -m -S -p "$PIDFILE" -x "/usr/bin/$DAEMON" \
                -- -f /etc/swupdate/swupdate.cfg -L -e rootfs,${ROOTFS} \
		-u "${SURICATTA_ARGS} -i ${TARGET_ID} -u ${HAWKBIT_URL} -k ${TARGET_TOKEN}"
        status=$?
        if [ "$status" -eq 0 ]; then
                echo "OK"
        else
                echo "FAIL"
        fi
	printf 'Starting hawkbit connect ... '
        /etc/swupdate/connect.sh &
        echo "done."
	return "$status"
}

stop() {
        printf 'Stopping %s: ' "$DAEMON"
        start-stop-daemon -K -q -p "$PIDFILE"
        status=$?
        if [ "$status" -eq 0 ]; then
                rm -f "$PIDFILE"
                echo "OK"
        else
                echo "FAIL"
        fi
        return "$status"
}

restart() {
        stop
        sleep 1
        start
}

case "$1" in
        start|stop|restart)
                "$1";;
        reload)
                # Restart, since there is no true "reload" feature.
                restart;;
        *)
                echo "Usage: $0 {start|stop|restart|reload}"
                exit 1
esac


